// SPI server IPC interface


Interface(
    name: "Spi",
    ops: {
        "read": (
            doc: "Read bytes from device `device_index` into `sink`, shifting out 1s.",
            args: {
                "device_index": (type: "u8"),
            },
            leases: {
                "sink": (type: "[u8]", write: true),
            },
            reply: Result(
                ok: "()",
                err: CLike("SpiError"),
            ),
        ),
        "write": (
            doc: "Write bytes from `source` and to device `device_index`, ignoring whatever's sent back.",
            args: {
                "device_index": (type: "u8"),
            },
            leases: {
                "source": (type: "[u8]", read: true),
            },
            reply: Result(
                ok: "()",
                err: CLike("SpiError"),
            ),
        ),
        "exchange": (
            doc: "Simultaneously write bytes from `source` and read bytes into `sink` using device `device_index`.",
            args: {
                "device_index": (type: "u8"),
            },
            leases: {
                "source": (type: "[u8]", read: true),
                "sink": (type: "[u8]", write: true),
            },
            reply: Result(
                ok: "()",
                err: CLike("SpiError"),
            ),
        ),
        "lock": (
            doc: "Take exclusive control of this SPI controller for talking to device `device_index`.",
            args: {
                "device_index": (type: "u8"),
                "cs_state": (type: "u8"), // TODO
            },
            reply: Result(
                ok: "()",
                err: CLike("SpiError"),
            ),
        ),
        "release": (
            doc: "Release a previously acquired lock.",
            args: {},
            reply: Result(
                ok: "()",
                err: CLike("SpiError"),
            ),
        ),
    },
)
